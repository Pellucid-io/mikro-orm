version: "3.4"

services:
  # first, we define the three mongo servers that will act as replicas
  # here, we setup the hostname ports, and startup command
  # which is the same as discussed in the previous section
  mongo1:
    hostname: mongo1
    image: mongo
    expose:
      - 27017
    ports:
      - "27017:27017"
    restart: always
    command: mongod --replSet rs
  mongo2:
    hostname: mongo2
    image: mongo
    expose:
      - 27017
    ports:
      - "27018:27017"
    restart: always
    command: mongod --replSet rs
  mongo3:
    hostname: mongo3
    image: mongo
    expose:
      - 27017
    ports:
      - "27019:27017"
    restart: always
    command: mongod --replSet rs

  # finally, we can define the initialization server
  # this runs the `rs.initiate` command to intialize
  # the replica set and connect the three servers to each other
  mongoinit:
    image: mongo
    # this container will exit after executing the command
    restart: "no"
    depends_on:
      - mongo1
      - mongo2
      - mongo3
    command: >
      mongo --host mongo1:27017 --eval 
      '
      db = (new Mongo("mongo1:27017")).getDB("test");
      config = {
      "_id" : "rs",
      "members" : [
        {
          "_id" : 0,
          "host" : "mongo1:27017"
        },
        {
          "_id" : 1,
          "host" : "mongo2:27017"
        },
        {
          "_id" : 2,
          "host" : "mongo3:27017"
        }
      ]
      };
      rs.initiate(config);
      '

  mysql8:
    image: mysql:8-oracle
    restart: unless-stopped
    ports:
      - "3308:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    command: [ "mysqld", "--default-authentication-plugin=mysql_native_password" ]
    volumes:
      - mysql8:/var/lib/mysql

  mariadb:
    image: mariadb:10.8
    ports:
      - "3309:3306"
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mariadb:/var/lib/mysql

  postgre:
    image: postgres:14.3
    ports:
      - "5432:5432"
    volumes:
      - postgre:/var/lib/postgresql/data
    environment:
      POSTGRES_HOST_AUTH_METHOD: trust

volumes:
  mysql8:
    driver_opts:
      type: tmpfs
      device: tmpfs
  mysql:
    driver_opts:
      type: tmpfs
      device: tmpfs
  mariadb:
    driver_opts:
      type: tmpfs
      device: tmpfs
  postgre:
    driver_opts:
      type: tmpfs
      device: tmpfs
